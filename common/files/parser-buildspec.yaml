version: 0.2

phases:
  pre_build:
    commands:
       - echo Logging in to Amazon ECR...
       - aws --version
       - aws ecr get-login-password --region eu-west-2 | docker login --username AWS --password-stdin $ECR_REPOSITORY_URL
       - GIT_TAG=$(git --no-pager tag --points-at $CODEBUILD_RESOLVED_SOURCE_VERSION)
  build:
    commands:
      - |
        if [ "$(echo $GIT_TAG | wc -l)" -eq 1 ]; then
          echo "Building version from git tag ${GIT_TAG}"
          docker build -t da-transform-codebuild-image:latest -f ${CODEBUILD_SRC_DIR_teDockerBuild}/lambda_functions/tre-run-judgment-parser/Dockerfile .
          docker tag da-transform-codebuild-image:latest $ECR_REPOSITORY_URL:latest
          docker tag da-transform-codebuild-image:latest $ECR_REPOSITORY_URL:$GIT_TAG
        else
          echo "No tag found for commit $CODEBUILD_RESOLVED_SOURCE_VERSION"
        fi
  post_build:
    commands:
      - echo "Build completed on $(date --utc +%c) UTC"
      - |
        if [ "$(echo $GIT_TAG | wc -l)" -eq 1 ]; then
          echo "Pushing the Docker images..."
          docker push $ECR_REPOSITORY_URL:latest
          docker push $ECR_REPOSITORY_URL:$GIT_TAG
          aws lambda update-function-code --function-name test_judgment_parser --image-uri $ECR_REPOSITORY_URL:$GIT_TAG
        else
          echo "No tag found for commit $CODEBUILD_RESOLVED_SOURCE_VERSION"
        fi
